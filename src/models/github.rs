// Generated by Github Copilot
use serde::{Deserialize, Serialize};

#[derive(Debug, Deserialize, Serialize, Clone)]
pub struct Language {
    pub name: String,
    pub total_engaged_users: i64,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub total_code_suggestions: Option<i64>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub total_code_acceptances: Option<i64>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub total_code_lines_suggested: Option<i64>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub total_code_lines_accepted: Option<i64>,
}

#[derive(Debug, Deserialize, Serialize, Clone)]
pub struct Model {
    pub name: String,
    pub is_custom_model: bool,
    pub custom_model_training_date: Option<String>,
    pub total_engaged_users: i64,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub languages: Option<Vec<Language>>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub total_chats: Option<i64>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub total_chat_insertion_events: Option<i64>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub total_chat_copy_events: Option<i64>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub total_pr_summaries_created: Option<i64>,
}

#[derive(Debug, Deserialize, Serialize, Clone)]
pub struct Editor {
    pub name: String,
    pub total_engaged_users: i64,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub models: Option<Vec<Model>>,
}

#[derive(Debug, Deserialize, Serialize, Clone)]
pub struct Repository {
    pub name: String,
    pub total_engaged_users: i64,
    pub models: Vec<Model>,
}

#[derive(Debug, Deserialize, Serialize, Clone)]
pub struct CopilotIdeCodeCompletions {
    pub total_engaged_users: i64,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub languages: Option<Vec<Language>>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub editors: Option<Vec<Editor>>,
}

#[derive(Debug, Deserialize, Serialize, Clone)]
pub struct CopilotIdeChat {
    pub total_engaged_users: i64,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub editors: Option<Vec<Editor>>,
}

#[derive(Debug, Deserialize, Serialize, Clone)]
pub struct CopilotDotcomChat {
    pub total_engaged_users: i64,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub models: Option<Vec<Model>>,
}

#[derive(Debug, Deserialize, Serialize, Clone)]
pub struct CopilotDotcomPullRequests {
    pub total_engaged_users: i64,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub repositories: Option<Vec<Repository>>,
}

#[derive(Debug, Deserialize, Serialize, Clone)]
pub struct CopilotMetrics {
    pub date: String,
    pub total_active_users: Option<i64>,
    pub total_engaged_users: Option<i64>,
    pub copilot_ide_code_completions: Option<CopilotIdeCodeCompletions>,
    pub copilot_ide_chat: Option<CopilotIdeChat>,
    pub copilot_dotcom_chat: Option<CopilotDotcomChat>,
    pub copilot_dotcom_pull_requests: Option<CopilotDotcomPullRequests>,
}
// Generated Code by Github Copilot ends here
